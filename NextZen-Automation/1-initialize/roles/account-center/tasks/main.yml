---
- name: Initialize Account center folder
  become: true
  ansible.builtin.copy:
    src: "{{ resource_base_dir }}/docker/account-center"
    dest: "{{ install_dest }}"
    owner: "{{ default_owner }}"
    group: "{{ default_group }}"
    mode: '0755'
##############################################################
- name: Log into private registry and force re-authorization
  community.docker.docker_login:
    registry: hub.nextzenos.com
    username: "{{ docker_username }}"
    password: "{{ docker_pass }}"
    reauthorize: true
##############################################################
- name: Check if the image already exists
  community.docker.docker_image_info:
    name: "{{ item }}"
  register: image_info
  with_items: "{{ account_center_images }}"
##############################################################
- name: Pull Image if not Exists
  community.docker.docker_image:
    name: "{{ item }}"
    state: present
    source: pull
  when: image_info.results | selectattr('item', 'contains', item) | length > 0
  with_items: "{{ account_center_images }}"
##############################################################
- name: Tear down existing services
  community.docker.docker_compose_v2:
    project_src: "{{ install_dest }}/account-center"
    state: absent
##############################################################
- name: Start Account Center Services
  community.docker.docker_compose_v2:
    project_src: "{{ install_dest }}/account-center"
  register: output
##############################################################
- name: Show results
  ansible.builtin.debug:
    var: output
##############################################################
- name: Get network info
  community.docker.docker_network_info:
    name: "account-center_default"
  register: net_info
##############################################################
- name: Get information about all containers
  community.docker.docker_container_info:
    name: "{{ item }}"
  register: container_info
  loop: "{{ net_info.network.Containers.keys() }}"
##############################################################
- name: Show Container results
  ansible.builtin.debug:
    var: container_info
##############################################################
- name: Find containers with 'account-center-server' in their name
  ansible.builtin.set_fact:
    matching_containers: "{{ container_info.results | selectattr('container.Name', 'search', 'account-center-server') | list }}"
##############################################################
- name: Debug matching containers
  ansible.builtin.debug:
    var: matching_containers
##############################################################
- name: Wait for account-center-server containers to be healthy
  community.docker.docker_container_info:
    name: "{{ item.container.Name | regex_replace('^/', '') }}"
  register: container_health
  until: container_health.container.State.Health.Status == 'healthy'
  poll: 10
  retries: 30
  loop: "{{ matching_containers }}"
  loop_control:
    label: "{{ item.container.Name | regex_replace('^/', '') }}"
##############################################################
- name: Display container health status
  ansible.builtin.debug:
    msg: "Container {{ item.container.Name | regex_replace('^/', '') }} health status: {{ item.container.State.Health.Status }}"
  loop: "{{ container_health.results }}"
