---
- name: Login to outpost
  ansible.builtin.uri:
    url: "http://{{ hostvars[inventory_hostname].ansible_default_ipv4.address }}:{{ outpost_setup_config.port }}/api/auth/login"
    method: POST
    body_format: json
    body:
      auth: "{{ outpost_app_user }}"
      password: "{{ outpost_app_pass }}"
    status_code: 204
  register: login
# - name: Get Cookie
#   ansible.builtin.debug:
#     var: "{{ login.cookies_string }}"
# - name: Get Host Ip
#   ansible.builtin.debug:
#     var: hostvars[inventory_hostname].ansible_default_ipv4.address
- name: Get existed projects
  ansible.builtin.uri:
    url: "http://{{ hostvars[inventory_hostname].ansible_default_ipv4.address }}:{{ outpost_setup_config.port }}/api/projects"
    method: GET
    return_content: true
    headers:
      Cookie: "{{ login.cookies_string }}"
  register: exist_project_list
- name: Get existed users
  ansible.builtin.uri:
    url: "http://{{ hostvars[inventory_hostname].ansible_default_ipv4.address }}:{{ outpost_setup_config.port }}/api/users"
    method: GET
    return_content: true
    headers:
      Cookie: "{{ login.cookies_string }}"
  register: exist_user_list
- name: Create Projects
  ansible.builtin.uri:
    url: "http://{{ hostvars[inventory_hostname].ansible_default_ipv4.address }}:{{ outpost_setup_config.port }}/api/projects"
    method: POST
    body_format: json
    body:
      name: "{{ item }}"
    headers:
      Cookie: "{{ login.cookies_string }}"
    status_code: 201
  loop: "{{ default_apps }}"
  when:
    - exist_project_list.json | map(attribute='name') | list is defined
    - item not in exist_project_list.json | map(attribute='name') | list
# - name: Delete Projects
#   ansible.builtin.uri:
#     url: "http://{{ hostvars[inventory_hostname].ansible_default_ipv4.address }}/api/project/{{ item.id }}"
#     method: DELETE
#     return_content: false
#     headers:
#       Cookie: "{{ login.cookies_string }}"
#     status_code: 204
#   loop: "{{ project_list.json }}"
- name: Create Users
  ansible.builtin.uri:
    url: "http://{{ hostvars[inventory_hostname].ansible_default_ipv4.address }}:{{ outpost_setup_config.port }}/api/users"
    method: POST
    body_format: json
    body:
      name: "{{ item }}"
      username: "{{ item }}"
      email: "{{ item }}@gmail.com"
      password: "{{ lookup('password', '/dev/null length=32 chars=ascii_letters,digits') }}"
      alert: false
      admin: false
      external: false
    headers:
      Cookie: "{{ login.cookies_string }}"
    status_code: 201
  loop: "{{ default_apps }}"
  when:
    - exist_user_list.json | map(attribute='name') | list is defined
    - item not in exist_user_list.json | map(attribute='name') | list
# - name: Delete Users
#   ansible.builtin.uri:
#     url: "http://{{ hostvars[inventory_hostname].ansible_default_ipv4.address }}/api/user/{{ item.id }}"
#     method: DELETE
#     return_content: false
#     headers:
#       Cookie: "{{ login.cookies_string }}"
#     status_code: 204
#   loop: "{{ user_list.json }}"
# - name: Import Mapping User and Project
#   ansible.builtin.import_tasks: mapping.yml
- name: Get projects
  ansible.builtin.uri:
    url: "http://{{ hostvars[inventory_hostname].ansible_default_ipv4.address }}:{{ outpost_setup_config.port }}/api/projects"
    method: GET
    return_content: true
    headers:
      Cookie: "{{ login.cookies_string }}"
  register: project_list
- name: Get users
  ansible.builtin.uri:
    url: "http://{{ hostvars[inventory_hostname].ansible_default_ipv4.address }}:{{ outpost_setup_config.port }}/api/users"
    method: GET
    return_content: true
    headers:
      Cookie: "{{ login.cookies_string }}"
  register: user_list
- name: Combine projects with corresponding users
  ansible.builtin.set_fact:
    projects_with_users: >-
      {%- set results = [] -%}
      {%- for project in project_list.json -%}
      {%- for user in user_list.json if user.username == project.name -%}
      {%- set _ = results.append({
        "project": project,
        "user": user
      }) -%}
      {%- endfor -%}
      {%- endfor -%}
      {{ results }}
- name: Get User Link to Project
  ansible.builtin.uri:
    url: "http://{{ hostvars[inventory_hostname].ansible_default_ipv4.address }}:{{ outpost_setup_config.port }}/api/project/{{ item.id }}/users"
    method: GET
    return_content: true
    headers:
      Cookie: "{{ login.cookies_string }}"
  tags:
    - skip_ansible_lint
  loop: "{{ project_list.json }}"
  register: user_links
- name: Link Users With Projects
  ansible.builtin.uri:
    url: "http://{{ hostvars[inventory_hostname].ansible_default_ipv4.address }}:{{ outpost_setup_config.port }}/api/project/{{ item.project.id | int }}/users"
    method: POST
    body: '{"user_id": {{ item.user.id | int }}, "role": "owner", "project_id": {{ item.project.id | int }}}'
    body_format: json
    headers:
      Cookie: "{{ login.cookies_string }}"
    status_code: 204, 409
  loop: "{{ projects_with_users }}"
  ignore_errors: true
  tags:
    - skip_ansible_lint
